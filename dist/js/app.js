(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var numberOne = document.querySelector("#numberOne");
var numberTwo = document.querySelector("#numberTwo");
var addNumbers = document.querySelector("#addNumbers");
var subtractNumbers = document.querySelector("#subtractNumbers");
var divideNumbers = document.querySelector("#divideNumbers");
var multiplyNumbers = document.querySelector("#multiplyNumbers");
var answer = document.querySelector("#answer");
var clear = document.querySelector("#clear");
var sum = 0;
answer.innerHTML = sum;

function add(a, b) {
  return a + b;
}

function subtract(a, b) {
  return a - b;
}

function divide(a, b) {
  return a / b;
}

function multiply(a, b) {
  return a * b;
}

addNumbers.addEventListener("click", function (e) {

  sum = add(Number(numberOne.value), Number(numberTwo.value));
  answer.innerHTML = sum;
});

subtractNumbers.addEventListener("click", function (e) {

  sum = subtract(Number(numberOne.value), Number(numberTwo.value));
  answer.innerHTML = sum;
});

divideNumbers.addEventListener("click", function (e) {

  sum = divide(Number(numberOne.value), Number(numberTwo.value));
  answer.innerHTML = sum;
});

multiplyNumbers.addEventListener("click", function (e) {

  sum = multiply(Number(numberOne.value), Number(numberTwo.value));
  answer.innerHTML = sum;
});

clear.addEventListener("click", function (e) {
  sum = 0;
  answer.innerHTML = sum;
});

console.log(sum);

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxJQUFJLFlBQVksU0FBUyxhQUFULENBQXVCLFlBQXZCLENBQVo7QUFDSixJQUFJLFlBQVksU0FBUyxhQUFULENBQXVCLFlBQXZCLENBQVo7QUFDSixJQUFJLGFBQWEsU0FBUyxhQUFULENBQXVCLGFBQXZCLENBQWI7QUFDSixJQUFJLGtCQUFrQixTQUFTLGFBQVQsQ0FBdUIsa0JBQXZCLENBQWxCO0FBQ0osSUFBSSxnQkFBZ0IsU0FBUyxhQUFULENBQXVCLGdCQUF2QixDQUFoQjtBQUNKLElBQUksa0JBQWtCLFNBQVMsYUFBVCxDQUF1QixrQkFBdkIsQ0FBbEI7QUFDSixJQUFJLFNBQVMsU0FBUyxhQUFULENBQXVCLFNBQXZCLENBQVQ7QUFDSixJQUFJLFFBQVEsU0FBUyxhQUFULENBQXVCLFFBQXZCLENBQVI7QUFDSixJQUFJLE1BQU0sQ0FBTjtBQUNKLE9BQU8sU0FBUCxHQUFtQixHQUFuQjs7QUFFQSxTQUFTLEdBQVQsQ0FBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CO0FBQ2pCLFNBQU8sSUFBSSxDQUFKLENBRFU7Q0FBbkI7O0FBSUEsU0FBUyxRQUFULENBQWtCLENBQWxCLEVBQXFCLENBQXJCLEVBQXdCO0FBQ3RCLFNBQU8sSUFBSSxDQUFKLENBRGU7Q0FBeEI7O0FBSUEsU0FBUyxNQUFULENBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCO0FBQ3BCLFNBQU8sSUFBSSxDQUFKLENBRGE7Q0FBdEI7O0FBSUEsU0FBUyxRQUFULENBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCO0FBQ3ZCLFNBQU8sSUFBSSxDQUFKLENBRGdCO0NBQXpCOztBQUlBLFdBQVcsZ0JBQVgsQ0FBNEIsT0FBNUIsRUFBcUMsVUFBUyxDQUFULEVBQVk7O0FBRS9DLFFBQU0sSUFBSSxPQUFPLFVBQVUsS0FBVixDQUFYLEVBQTZCLE9BQU8sVUFBVSxLQUFWLENBQXBDLENBQU4sQ0FGK0M7QUFHL0MsU0FBTyxTQUFQLEdBQW1CLEdBQW5CLENBSCtDO0NBQVosQ0FBckM7O0FBT0EsZ0JBQWdCLGdCQUFoQixDQUFpQyxPQUFqQyxFQUEwQyxVQUFTLENBQVQsRUFBWTs7QUFFcEQsUUFBTSxTQUFTLE9BQU8sVUFBVSxLQUFWLENBQWhCLEVBQWtDLE9BQU8sVUFBVSxLQUFWLENBQXpDLENBQU4sQ0FGb0Q7QUFHcEQsU0FBTyxTQUFQLEdBQW1CLEdBQW5CLENBSG9EO0NBQVosQ0FBMUM7O0FBT0EsY0FBYyxnQkFBZCxDQUErQixPQUEvQixFQUF3QyxVQUFTLENBQVQsRUFBWTs7QUFFbEQsUUFBTSxPQUFPLE9BQU8sVUFBVSxLQUFWLENBQWQsRUFBZ0MsT0FBTyxVQUFVLEtBQVYsQ0FBdkMsQ0FBTixDQUZrRDtBQUdsRCxTQUFPLFNBQVAsR0FBbUIsR0FBbkIsQ0FIa0Q7Q0FBWixDQUF4Qzs7QUFPQSxnQkFBZ0IsZ0JBQWhCLENBQWlDLE9BQWpDLEVBQTBDLFVBQVMsQ0FBVCxFQUFZOztBQUVwRCxRQUFNLFNBQVMsT0FBTyxVQUFVLEtBQVYsQ0FBaEIsRUFBa0MsT0FBTyxVQUFVLEtBQVYsQ0FBekMsQ0FBTixDQUZvRDtBQUdwRCxTQUFPLFNBQVAsR0FBbUIsR0FBbkIsQ0FIb0Q7Q0FBWixDQUExQzs7QUFPQSxNQUFNLGdCQUFOLENBQXVCLE9BQXZCLEVBQWdDLFVBQVMsQ0FBVCxFQUFZO0FBQzFDLFFBQU0sQ0FBTixDQUQwQztBQUUxQyxTQUFPLFNBQVAsR0FBbUIsR0FBbkIsQ0FGMEM7Q0FBWixDQUFoQzs7QUFLQSxRQUFRLEdBQVIsQ0FBWSxHQUFaIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBudW1iZXJPbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlck9uZVwiKTtcbnZhciBudW1iZXJUd28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlclR3b1wiKTtcbnZhciBhZGROdW1iZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGROdW1iZXJzXCIpO1xudmFyIHN1YnRyYWN0TnVtYmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3VidHJhY3ROdW1iZXJzXCIpO1xudmFyIGRpdmlkZU51bWJlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RpdmlkZU51bWJlcnNcIik7XG52YXIgbXVsdGlwbHlOdW1iZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtdWx0aXBseU51bWJlcnNcIik7XG52YXIgYW5zd2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhbnN3ZXJcIik7XG52YXIgY2xlYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NsZWFyXCIpO1xudmFyIHN1bSA9IDA7XG5hbnN3ZXIuaW5uZXJIVE1MID0gc3VtO1xuXG5mdW5jdGlvbiBhZGQoYSwgYikge1xuICByZXR1cm4gYSArIGI7XG59XG5cbmZ1bmN0aW9uIHN1YnRyYWN0KGEsIGIpIHtcbiAgcmV0dXJuIGEgLSBiO1xufVxuXG5mdW5jdGlvbiBkaXZpZGUoYSwgYikge1xuICByZXR1cm4gYSAvIGI7XG59XG5cbmZ1bmN0aW9uIG11bHRpcGx5IChhLCBiKSB7XG4gIHJldHVybiBhICogYjtcbn1cblxuYWRkTnVtYmVycy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xuXG4gIHN1bSA9IGFkZChOdW1iZXIobnVtYmVyT25lLnZhbHVlKSwgTnVtYmVyKG51bWJlclR3by52YWx1ZSkpO1xuICBhbnN3ZXIuaW5uZXJIVE1MID0gc3VtO1xuXG59KTtcblxuc3VidHJhY3ROdW1iZXJzLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XG5cbiAgc3VtID0gc3VidHJhY3QoTnVtYmVyKG51bWJlck9uZS52YWx1ZSksIE51bWJlcihudW1iZXJUd28udmFsdWUpKTtcbiAgYW5zd2VyLmlubmVySFRNTCA9IHN1bTtcblxufSk7XG5cbmRpdmlkZU51bWJlcnMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcblxuICBzdW0gPSBkaXZpZGUoTnVtYmVyKG51bWJlck9uZS52YWx1ZSksIE51bWJlcihudW1iZXJUd28udmFsdWUpKTtcbiAgYW5zd2VyLmlubmVySFRNTCA9IHN1bTtcblxufSk7XG5cbm11bHRpcGx5TnVtYmVycy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xuXG4gIHN1bSA9IG11bHRpcGx5KE51bWJlcihudW1iZXJPbmUudmFsdWUpLCBOdW1iZXIobnVtYmVyVHdvLnZhbHVlKSk7XG4gIGFuc3dlci5pbm5lckhUTUwgPSBzdW07XG5cbn0pO1xuXG5jbGVhci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xuICBzdW0gPSAwO1xuICBhbnN3ZXIuaW5uZXJIVE1MID0gc3VtO1xufSk7XG5cbmNvbnNvbGUubG9nKHN1bSk7XG4iXX0=
